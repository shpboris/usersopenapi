openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
servers:
- url: /
paths:
  /users:
    get:
      operationId: get_users
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: A list of users
      summary: Get all users
      tags:
      - Users
      x-openapi-router-controller: api.spec.v1.openapi_server.controllers.users_controller
    post:
      operationId: create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User object to be added
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User created
      summary: Create a new user
      tags:
      - Users
      x-openapi-router-controller: api.spec.v1.openapi_server.controllers.users_controller
  /users/{id}:
    delete:
      operationId: delete_user_by_id
      parameters:
      - description: ID of the user to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: User deleted
      summary: Delete a user by ID
      tags:
      - Users
      x-openapi-router-controller: api.spec.v1.openapi_server.controllers.users_controller
    get:
      operationId: get_user_by_id
      parameters:
      - description: ID of the user to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User found
        "404":
          description: User not found
      summary: Get a user by ID
      tags:
      - Users
      x-openapi-router-controller: api.spec.v1.openapi_server.controllers.users_controller
    put:
      operationId: update_user_by_id
      parameters:
      - description: ID of the user to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User object to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User updated
        "404":
          description: User not found
      summary: Update a user by ID
      tags:
      - Users
      x-openapi-router-controller: api.spec.v1.openapi_server.controllers.users_controller
components:
  schemas:
    User:
      example:
        unit: unit
        name: name
        id: 0
        salary: 6.027456183070403
      properties:
        id:
          title: id
          type: integer
        name:
          title: name
          type: string
        unit:
          title: unit
          type: string
        salary:
          title: salary
          type: number
      required:
      - name
      - salary
      - unit
      title: User
      type: object
